on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

name: keycloak

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Build, tag, and push the base image to Amazon ECR
      id: build-image-base
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.BASE_KEYCLOAK_ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.base .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.KEYCLOAK_ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster keycloak-cluster --service keycloak-service --task-definition keycloak

    # - name: Fetch New Task IPs
    #   id: fetch-ips
    #   run: |
    #     NEW_IPS=$(aws ecs list-tasks --cluster keycloak-cluster --service-name keycloak-service --query 'taskArns[]' --output text | \
    #               xargs -I {} aws ecs describe-tasks --cluster keycloak-cluster --tasks {} --query 'tasks[].attachments[].details[?name==`privateIPv4Address`].value' --output text)
    #     echo "New IPs are: $NEW_IPS"
    #     echo "TARGETS=$(echo $NEW_IPS | awk '{for(i=1;i<=NF;i++) printf "Id=%s ", $i; printf "\n"}')" >> $GITHUB_ENV

    # - name: Update Target Group
    #   run: |
    #     # Register new IPs
    #     aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancing:ap-south-1:456776435391:targetgroup/keycloak/c963af9a995df4cd --targets $TARGETS

